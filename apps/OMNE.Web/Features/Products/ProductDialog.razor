@inject OmneClient OmneClient
@inject ISnackbar Snackbar

<MudDialog>
  <DialogContent>
    <MudForm @ref="form">
      <MudGrid>
        <MudItem xs="12">
          <MudTextField Label="Name" Required Variant="Variant.Outlined"
                        For="@(() => Product.Name)"
                        @bind-Value="Product.Name" />
        </MudItem>
        <MudItem xs="12">
          <MudNumericField Label="Price" Required Variant="Variant.Outlined" Format="C2"
                           For="@(() => Product.Price)"
                           @bind-Value="Product.Price" />
        </MudItem>
        <MudItem xs="12">
          <MudTextField Label="Description" Lines="3" Variant="Variant.Outlined"
                        @bind-Value="Product.Description" />
        </MudItem>
      </MudGrid>
    </MudForm>
  </DialogContent>
  <DialogActions>
    <MudButton OnClick="@Cancel">Cancel</MudButton>
    <MudButton OnClick="@Submit" Color="Color.Primary" Variant="Variant.Filled">Save</MudButton>
  </DialogActions>
</MudDialog>

@code {
  [CascadingParameter]
  private IMudDialogInstance MudDialog { get; set; } = default!;

  [Parameter]
  public Product Product { get; set; } = new();

  private MudForm form = default!;

  private async Task Submit() {
    await form.Validate();
    if (!form.IsValid) return;

    try {
      if (Product.Id == default) {
        Product = await OmneClient.Products.Create(Product);
        Snackbar.Add("Product created successfully!", Severity.Success);
      } else {
        await OmneClient.Products.Update(Product);
        Snackbar.Add("Product updated successfully!", Severity.Success);
      }

      MudDialog.Close(DialogResult.Ok(Product));
    }
    catch (Exception ex) {
      Snackbar.Add($"Error saving product: {ex.Message}", Severity.Error);
    }
  }

  private void Cancel() => MudDialog.Cancel();
}
